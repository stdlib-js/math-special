// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
function e(e){if(e.__esModule)return e;var r=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})})),r}var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=function(){try{return r({},"x",{}),!0}catch(e){return!1}},o=Object.defineProperty,n=Object.prototype,a=n.toString,i=n.__defineGetter__,l=n.__defineSetter__,u=n.__lookupGetter__,c=n.__lookupSetter__;var _=o,p=function(e,r,t){var o,_,p,b;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(u.call(e,r)||c.call(e,r)?(o=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=o):e[r]=t.value),p="get"in t,b="set"in t,_&&(p||b))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&i&&i.call(e,r,t.get),b&&l&&l.call(e,r,t.set),e},b=t()?_:p;var s=function(e,r,t){b(e,r,{configurable:!1,enumerable:!0,writable:!1,value:t})},f=require("path").join,d=require("@stdlib/utils-try-require");require("./main.js"),d(f("/home/runner/work/math-special/math-special/node_modules/@stdlib/math-special-abs/lib","./native.js"));var y=e(Object.freeze({__proto__:null})),v={};s(v,"abs",y);var j=v;export{y as abs,j as default};
//# sourceMappingURL=mod.js.map
